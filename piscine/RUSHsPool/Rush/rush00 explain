/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   rush00.c                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: shdorsh <marvin@42.fr>                     +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/07/13 01:44:52 by shdorsh           #+#    #+#             */
/*   Updated: 2024/07/13 03:11:11 by shdorsh          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */
void	ft_putchar(char c);

/*
 * This here initiates a 2D array with characters based on whether we find ourselves at the bottom/top row/column or not.
 * In other words, you could say it looks like this: printed_chars[row_border?][column_border?]
 */
void	set_printed_chars(char printed_chars[2][2])
{
	printed_chars[0][0] = ' ';
	printed_chars[0][1] = '|';
	printed_chars[1][0] = '-';
	printed_chars[1][1] = 'o';
}

/**
 * This function checks if we are at the top (meaning the first row/column) or the bottom (meaning the nth row/column)
 */
int	border(int iter_n, int n)
{
	return (iter_n == 1 || iter_n == n);
}

/**
 * This function prints the box of x and y dimension.
 */
void	rush(int x, int y)
{
	int		iter_x;
	int		iter_y;
	char	printed_chars[2][2];

	iter_x = 1;
	set_printed_chars(printed_chars);
	while (iter_x <= x)
	{
		iter_y = 1;
		while (iter_y <= y)
		{
			/**
			 *  We retrieve the correct character for the current position of our box by checking whether we are on border rows
			 * (meaning, border(iter_x, x)) or border columns (meaning, border(iter_y, y)) and fill this inside the array, retrieving
			 * the character from the 2D array. The ft_putchar() function then prints the character.
			 */
			ft_putchar(printed_chars[border(iter_x, x)][border(iter_y, y)]);
			iter_y++;
		}
		ft_putchar('\n');
		iter_x++;
	}
}
